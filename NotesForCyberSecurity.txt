Terminal Commands:


Navigating the linux terminal:
•	cd = move up
o	cd ../ = go back a directory
o	cd .. = go up a directory
o	cd ~ = go home directory 
o	cd / = go root directory
o	cd /home/superbonniefanb/Documents = goes a path you list so you can get to hidden files faster
•	ls = list
o	ls -l = list in details
o	ls -a = shows hidden files
•	pwd = it will list the amount of directories you are already inside


CRUD (Create, Read, Update, Delete) Files & Directories
•	Create
o	touch = make text document
o	mkdir = make folder
•	Read
o	cat = shows folders/files inside a folder 
o	less = allows you to scroll through a file
	to exit you click “q”
•	Update
o	nano = you can open text files with this
o	Echo “Text” > [filename] = adds text to a file
o	mv = renames folders/files or you can use it to move folders and files.
•	Remove
•	rmdir = delete folder
•	rm = delete file
•	rn -r = removes folder and its contents


File Permissions
Understanding Permsions
o	ls -l - Can also check file permissions
o	Permissions are also shown as –rwxrwxrwx, divided into User (u), divided into Group (g), and others (o). Basically, each rwx represents each.
	r – Read (4)
	w – Write (2)
	x – Execute(1)
Changing Permissions
o	chmod u+x [filename] – When doing this it adds the execute permission for said user.
o	chmod g-w [filename] – When doing this it removes the permissions for the user to write other people's permissions
Numeric method:
o	chmod 755 [filename] - Sets permissions to rwxr-xr-x meaning that the user can read, write and execute, Group can red but it cannot write and it can execute, and finally for others they cant do the same. 
o	chmod 644 [filename] = sets it so the owner can read and write but the group and others can only read. 6 = read and write 4 = read
	7 = read write and execute
	6 = read and write
	5 = read and execute
	4 = read
	3 = write and execute
	2 = write
	1 = execute
	0 = YOU HAVE NOOTHHHINNNGGG


Using Sudo and its superuser privileges
Basics:
o	sudo = sudo means Super User Do. It allows you to do things you cant normally do because of security reasons. Basically, giving you superuser privileges
	sudo chown [new owner]:[newgroup] – this would change the users ownership over something.
o	sudo apt update – This would update all the packages
o	su – This would mean switch user.

superbonniefanb@awesomesaucer:~$ - at the start of this directory is our user. This is the user that we are logged into, next awesomesaucer is the pc name, that’s what other networks will read it as. The: is the start of directory, ~ means superbonniefanb/home and $ means to type here.


 
Main Computer Components are
RAM – Pc's memory that allows you to open many applications
CPU
GC
CPU cooler
Mother Board -  Main circuit board in a pc. Basically connects everything to itself
Monitor – Allows you to see stuff
Keyboard – Allows you to type
Mouse-Allows you to move the mouse
Speakers – Allows you to hear audio
Hard Drive - Stores all your data like programs files applications and what not.
Case – Stores components like RAM, CPU etc into it.


 
Binary
Every value we go up by we multiply it by 2. For example we start with the value of 1. then we want to do
01+01 then it would be 10 which would be the value of 2. or we can do 101010100 + 010010111 = 11101011 which would equal 938. every
value that has a 1 is true and every value that has a 0 is false
Binary is the language computers speak 
Logic Gates are terms such as
Is Not And If Nand
Is is basically if A is True
Not is basically if A is not True
And is basically if A and B are true 
If is basically if A or B are true
Nand is basically if A and B are not true



Terminology
IP Address is basically the home for your devices, this helps your device be able to interact with other devices.



Git and its neat stuff
git init – this would initialize a git repository.
Repository often said as “repo” is a project folder that contains your project files and the complete history of its changes, this goes from all the way back to when the game was created and who created it.
Key concepts or repo
1. Working Directory
This folder on your pc is where you actively work in with your projects and shows the current state of the file
2. Staging Area (or index)
This is the temporary storage area. This is where Git keeps track of changes that will go into your next commit. 	Before you commit changes, you add them to the staging area using git add.
	3. Commit history




Bash Scripting:

	What is bash scripting?

		Bash is first off the language the computer speaks which we 
		know of.
		Scripting is when your giving instructions to the computer  	
		like what to do and when to do it.
		
		Bash scripting is when you write a series of commands that 		 
		files can be executed by Bash's command line interpreter. 
		It allows the user to automate commands	such as tasks
		managing files manipulating text and much more. all of it
		being used with simple scripts.
		
		Bash scripting is useful for automation, customization
		and efficiency, this is especially useful in a Linux
		environment
		
	Scripting Basics:
		
		Every single Bash script will always start with
		#!/bin/bash which tells the system what language it should
		interpret your script.
		
		Variables:
			You store and retrieve data in variables
			ex:
			
			THING="Lava" --The variable
			echo "Watch out the floor is $THING!" 
		Loops:
			To repeat the same command or item
			ex:
			
			for i in {1..5}; do --every 1-5 times it "does"
 			 echo "Iteration $i" -- will do this 1-5 times
			done
			
		Conditionals:
			Preform tasks based on conditions
			ex:
			
			if [ "$NAME" == "John" ]; then --if the name  is 
							john then it will
							do the following
 			 echo "Welcome, John!"
			else --if your not john then it will say the other 
			  echo "You are not John."
			fi
			
		Functions:
			Organize reusable code into functions.
			ex:
			
			greet() {
 			 echo "Hello, $1!"
			}
			greet "Humza"
		File execution
			Make the script executable and be able to run it
			ex:
			
			chmod +x script.sh
			./script.sh
		Echo
			echo is when the pc reads a line to the terminal.
			ex:
			
			echo "hey its me cool guy!"

		Read
			read is when the code reads what the user has inputted and splits it into strings assigning each new word to an argument
			ex:

			read -- it will say hello world

			read $va1 $va2 -- it will say hello world but turn the hello into a variable and the world into another variable.
			echo $va1 -- it will say hello
			echo $va2 -- it will say world
		If
			if statements are when it checks if something is true
		Heres a custom script that can check if a directory exists,
		if it doesn't it will create one
		
		
		#!/bin/bash

		DIR="awesomesauce" --creating the variable name

		if [ -d "$DIR" ]; then --if the directory is true it will just respond with the echo command below
		    echo "Directory $DIR already exists."
		else --if it's false then it will say the lines of command below
		    echo "Directory $DIR does not exist. Creating 
		    it now..."
  		  mkdir "$DIR" --creates directory
   		 echo "Directory $DIR created successfully."
		fi


System Monitoring
	
	What is system monitoring?
	
		System monitoring is the process of continuously observing
		tracking the performance health and activity of your
		computer system or network. this would involve collecting
		& analyzing data related to the system like CPU usage,
		memory consumption, disk I/O, and much more to ensure
		that the system is running smoothly and to detect
		if there are any potential issues.
	
	Key Tools
		
		the top command provides a view of the systems process and resource usage like the CPU and Memory ussage, what kind of
		processers are running, what are the system load averages, the system uptime, and process details like the PID (Process ID)
		which is a unique identifier assigned by the operating system to every process running on the system

		the htop command is top but enhanced, its more user-friendly interface, allows you to scroll through the list of processes and 
		preform tasks like killing processes easily.

		the df (disk free)command reports how much space is available on the file systems, displaying the total, and used space also
		the files systems mount point. It also can show file names. and the command would have df -h, -h means the option to show
		the output in humand readable format.

		the uptime command shows the duration of the system running, the number of users that are logged in, and the system loads
		averages over the past 1-5 and 15 minutes.
	
	Log Monitoring

		journalctl (Centralized Systemd Log Viewer) is a command used to view logs generated by the systemd journal. which is the
		logging componenet of the systemd (system and service manager for linux) to view all logs you would say journalctl, to
		view logs for the current boot would be journalctl -b, and follow logs in rea-time using jornalctl -f, to be able to view
		specific services you would say journalctl -u sshd, to view logs for a specfic time range you would say journalctl like
		journalctl --since "2022-01-04" --until "2024-03-05" and shows your logs at those specfic time. To be able to view kernel logs
		which isresponcible for managing hardware,process,memory and system resource, is journalctl -k. The limit of the number of log
		entries is journalctl -n 100, and finally the view logs for specific user is journalctl _UID=0
		
		journalctl -b = shows logs from current boot
		journalctl -f = follows log output in real-time
		journalctl -u = shows logs for a specific service
		journalctl -k = shows kernel logs
		journalctl --since "exdate" --until "exdate" = to filter logs by date


		/var/log is the directory for the log files. Traditionally text based files are stored in this on Linux systems. Each system
		writes its logs in this directory and read text looks with cat, less or tail.

		cat /var/log/syslog = Genereal system logs
		cat /var/log/messages = General system logs
		cat /var/log/auth.log = this checks the files that contains login attempts, sudo attempts, SSH logins, and more
		dmesg = this file logs kernel related messages.
		cat /var/log/boot.log = this file contians the messages logged during system startup
		cat /var/log/kern.log = similar to dmesg this also contains logs related to the linux kernel.
		cat /var/log/faillog = this contains the information on the failed login attempts
		cat /var/log/cron.log = this logs related to cron jobs.
		tail -f /var/log/syslog = follows the logs real time
		tail -n 100 /var/log/syslog = displays the last 100 lines of a log file.

	If you want to see your resource ussage, try htop and not top, since htop is just better, after that press q to quit. Then to check logs
	do "cat /var/logsyslog" this would check your general system logs.



System Security
	
	What is System Security?
		System security is the practice of protecting computer systems and networks from unauthorized acess, 
		cyber attacks, data breaches, and other forms of exploitation. the whole goal behind safe gaurds are to confidentiality, integrity
		and availablility, confidentiality is when it ensures that sensitive info is only accessible to those who are authorized to see it
		integrity is when it ensures data remains the same and never changed. Availability ensures that the system, applications and 
		data are available to users when needed.
	File permissions
		This is not new, we alreaddy took notes of this along with our terminal commands lists. Go there for all the information. But I will add if you do ls -l you will get for this ex

		-rw-r--r--  1 username groupname  1234 Oct 15 10:12 myfile.txt
		drwxr-xr-x  2 username groupname  4096 Oct 15 10:12 mydir

		the first part refers to the owner and then the 2nd part refers to the group and lastly the others. owners can read and write, groups and others can read. 1 is the number
		of links (like how many hard links are going to be point at a file or directory.) the username is the owner of said file and the groupname is what group is associated with
		the file, 1234 is the size of it and the rest is self explanitory.
	User management
		To add a user is the command
		sudo adduser lloyd
		when doing this it will create a new home directory assigned with its own UID and prompting it to give a password for this user. You can add info if you want like full name phone
		number and more, this user will be automatically added to default groups which is the users in this case.
		
		To modify a user is to do the command

		sudo usermod -l greenninja  lloyd
				(new user)(old user)

		this would make a new name for the user.


		sudo usermod -d /home/path greenninja

		this would move the users home directory to somewhere else 


		sudo usermod -aG sudo greenninja

		this will make greenninja a superuser (-a means append and -G specifies the group to add the user to)


		sudo usermod -s /bin/bash greenninja
		
		this will change the default shell for the user to bash.


		sudo usermod -L greenninja
		
		this would lock the user out from there account


		sudo usermod -U greenninja

		this would unlock the account
		
		To remove a user is 
		sudo deluser greenninja
		not much to explain it just literally deletes it. Along with greenninja's home directory
	Firewall basics
		A firewall is the barrier that establishes trust between internal networks (ex: home) and untrusted external networks 
		(ex: internet) the fire wall decides what should be allowed or be blocked based on its ruling.
		UFW which means Uncomplicated Firewall makes it easy for users to configure and manage their firewall rules on linux system
		usually its preinstalled, but if it isnt you have to use sudo apt install ufw to get it.
		
		sudo ufw enable -- Booted it up
		sudo ufw disable -- Powering it down
		sudo ufw status -- Check what the rules are set as
		sudo ufw status verbose -- More details of the rules
		sudo ufw allow 80 -- Allow's a port like ex would be something like port 80
		sudo ufw allow 80/tcp -- it allowes it but with a specified protocal.
		sudo ufw allow http -- allows services that have http in it.
		sudo ufw allow 1000:2000/tcp -- allows services in the range of ports 1000 to 2000
		sudo ufw allow from 242.452.2.421 -- allows a specific ip address
		sudo ufw allow from 242.452.2.421 to any port 22 -- allows only this specfic adress from this specific port

		sudo ufw deny 22 -- dennies any ports that are 22
		sudo ufw deny 53/udp -- dennies protocalls
		sudo ufw deny from 242.452.2.421 -- dennies specific ip address' in

		sudo ufw delete allow 80 -- deletes the rule for a port
		sudo ufw delete allow from 242.521.5.521 to any port 22 -- deleteing the rule by specifying it

		sudo ufw default deny incoming -- dennies all incoming connections by default
		sudo ufw default allow outgoing --  allows all outgoing connections to come in by default

		sudo ufw logging on -- enable logging
		sudo ufw logging off -- disable logging
		

	Now that we know all this, say you want to make a folder thats only for groups to view but not users. what command you would exacute
	on it is chmod 740. 7 so the admins can read write and execute. 4 so groups can read whats inside of the folder. and 0 so users cannot
	see whats in it. inside it we will make a text file that only admins can edit like a set of rules for the groups. so we would
	chmod 740 grouprules.txt